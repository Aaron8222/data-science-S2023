in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
coverage = flag = (lo <= pi) & (pi <= hi) %>%
mean()
coverage
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
coverage == flag = (lo <= pi) & (pi <= hi) %>%
mean()
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
coverage = flag = (lo <= pi) & (pi <= hi) %>%
mean()
coverage
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo
hi
coverage = flag = (lo <= pi) & (pi <= hi) %>%
mean()
coverage
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo * 4
hi * 4
coverage = flag = (lo <= pi) & (pi <= hi) %>%
mean()
coverage
## TASK: Choose a sample size and generate samples
set.seed(101)
x <- runif(n)
y <- runif(n)
n <- 10e4
df_q1 <-
tibble(
x = runif(n),
y = runif(n)
) %>%
mutate(in_circle = (x^2 + y^2 < 1)) %>%
summarize(n = n(), count_in_circle = sum(in_circle),
mean = mean(in_circle))
df_q1
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo * 4
hi * 4
coverage = flag = (lo <= pi) & (pi <= hi) %>%
summarize(mean())
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo * 4
hi * 4
coverage = (flag = (lo <= pi) & (pi <= hi)) %>%
summarize(mean())
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo * 4
hi * 4
coverage = (flag = (lo <= pi) & (pi <= hi)) %>%
coverage
q99 <- qnorm(1 - (1 - 0.99) / 2)
pi = 3.14159265359
in_circle = (x^2 + y^2 < 1)
lo <- mean(in_circle) - q99 * sd(in_circle) / sqrt(n)
hi <- mean(in_circle) + q99 * sd(in_circle) / sqrt(n)
lo * 4
hi * 4
coverage = (flag = (lo <= pi) & (pi <= hi))
coverage
df_q1 %>%
filter(
n > 1,
id <= 100
) %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= 0.5) & (0.5 <= hi)
)) +
facet_grid(n~.) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= 0.5) & (0.5 <= hi)
)) +
facet_grid(n~.) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
## TASK: Choose a sample size and generate samples
set.seed(101)
x <- runif(n)
y <- runif(n)
n <- 10e4
df_q1 <-
tibble(
x = runif(n),
y = runif(n)
) %>%
mutate(in_circle = (x^2 + y^2 < 1)) %>%
summarize(n = n(), count_in_circle = sum(in_circle),
mean = mean(in_circle), sd = sd(in_circle))
df_q1
## TASK: Estimate pi using your data from q1
pi_est <- df_q1 %>%
select(mean) %>%
{. * 4}
pi_est
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= 0.5) & (0.5 <= hi)
)) +
facet_grid(n~.) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
)
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
)
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes(x^2 + y^2 < 1)) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= 0.5) & (0.5 <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes()) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= 0.5) & (0.5 <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
df_q1 %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes()) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
1:in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z), sd = sd(Z))
df_clt %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes()) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
1:in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z), sd = sd(Z))
df_clt %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
1:in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
df_clt %>%
mutate(
se = sd / sqrt(n),
lo = mean * 4 - q95 * se,
hi = mean * 4 + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
1:in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
df_clt %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
1:in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
df_clt
df_clt %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se
) %>%
ggplot(aes(id)) +
geom_hline(yintercept = pi, linetype = 2) +
geom_errorbar(aes(
ymin = lo,
ymax = hi,
color = (lo <= pi) & (pi <= hi)
)) +
scale_color_discrete(name = "CI Contains True Mean") +
theme(legend.position = "bottom") +
labs(
x = "Replication",
y = "Estimated Mean"
)
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
q95 <- qnorm( 1 - (1 - 0.99) / 2 )
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
df_clt %>%
filter(n > 1) %>%
mutate(
se = sd / sqrt(n),
lo = mean - q95 * se,
hi = mean + q95 * se,
flag = (lo <= 0.5) & (0.5 <= hi)
) %>%
group_by(n) %>%
summarize(coverage = mean(flag))
q95 <- qnorm( 1 - (1 - 0.99) / 2 )
pi = 3.14159265359
in_circle = x^2 + y^2 < 1
df_clt <-
map_dfr(
in_circle,
function(id) {
map_dfr(
c(10e4),
function(n) {
tibble(
Z = runif(n),
n = n,
id = id
)
}
)
}
) %>%
group_by(n, id) %>%
summarize(mean = mean(Z) * 4, sd = sd(Z))
